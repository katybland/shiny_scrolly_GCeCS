runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
ylab("Days closed") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='katybland',
token='EEB9124C026B379674E7ED59B4E92ADA',
secret='<SECRET>')
rsconnect::setAccountInfo(name='katybland',
token='EEB9124C026B379674E7ED59B4E92ADA',
secret='Gx/8jUYgGlTS0fw/SgSWobpZqPB/qT4HZg1u9CSB')
options(scipen = 999)  #to not use scientific notation
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
om_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
ylab("Days closed") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
ylab("Days closed") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
ylab("Days closed") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(trans = 1, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(trans = ~*1, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(trans = ~.*1, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(~.*7, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(~.*7, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
p<- ggplot(closures_sp) +
geom_bar(aes(x = y, y = days.closed, fill = port_group_name,
text = glue::glue('<span style = "font-size:1.5em">{port_group_name}</span>
<i>Year</i>: {y}
<i>Days delayed</i>: {days.closed}'
)),
position = "dodge", stat = "identity") +
# geom_text(aes(x = y, y = days.closed, label = ifelse(days.closed >0, days.closed, "")),
#           nudge_x = -.3, nudge_y = 2.5) +
theme_bw() +
theme(
# legend.position = c(.2, .8),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_text(vjust = 10),
# axis.ticks.x = element_blank(),
# axis.text.y = element_blank(),
# axis.ticks.y = element_blank(),
# axis.title.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size = 20))+
xlab("") +
scale_x_continuous(labels=as.character(closures_sp$y),breaks=closures_sp$y) +
scale_y_continuous(name = "Days closed",
sec.axis = sec_axis(~.*1, name="Days closed")) +
scale_fill_manual(values = rev(c( "#81171b", "#ef8354","#c97c5d","#ccb7ae","#a6808c", "#565264",    "black")))
# scale_fill_viridis(discrete = TRUE, name = "California Port Group")
# labs(caption = "*Dungeness crab seasons are identified by the year they would have started.",
#      br(), "2015 represents the season that would have started in November 2015")
p
ggplotly(p, tooltip = 'text')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
